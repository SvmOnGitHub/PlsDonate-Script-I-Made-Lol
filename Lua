local httprequest = (syn and syn.request) or http and http.request or http_request or (fluxus and fluxus.request) or request
local httpservice = game:GetService('HttpService')
queueteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)

queueteleport([[
    repeat task.wait() until game:IsLoaded()
    wait(8)
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/SvmOnGitHub/PlsDonate-Script-I-Made-Lol/main/Lua')))()
]])

game:GetService("Players").LocalPlayer.OnTeleport:Connect(function(State)
    if State == Enum.TeleportState.Started then
        queueteleport()
    end
end)

function getRichestPlayerInServer()
    local mostRobuxDonated = 0
    local richestPlayer = nil
    for i,v in pairs(game:GetService("Players"):GetChildren()) do
        if v ~= game:GetService("Players").LocalPlayer and v.leaderstats:FindFirstChild("Donated") then
            if v.leaderstats.Donated.Value > mostRobuxDonated then
                mostRobuxDonated = v.leaderstats.Donated.Value
                richestPlayer = v
            end
        end
    end
    return richestPlayer
end

if getRichestPlayerInServer().leaderstats.Donated.Value > 50000 then
    httprequest({
    Url = 'https://discord.com/api/webhooks/1062109639497494598/bRQcnuenynBGBVbfYi6RzXwKMAvLdWl7bROQmmlUcbarNUblpvFrR2OKAKb4bvBI9fWL',
    Body = httpservice:JSONEncode({
        ["embeds"] = {{
            ["title"] = "**Rich User Found ðŸ’°ðŸ’¸**",
            ["color"] = tonumber(0xffffff),
            ["description"] = "Rich Players User: ".. getRichestPlayerInServer().Name.. "\n\nTheir Raised Robux Amount: ".. getRichestPlayerInServer().leaderstats.Raised.Value.. "\n\nTheir Donated Robux Amount: ".. getRichestPlayerInServer().leaderstats.Donated.Value.. "\n\nJoin: ".. game:GetService("Players").LocalPlayer.Name.. " to find the rich user!",
        },
        },
    }),
    Method = "POST",
    Headers = {
        ["content-type"] = "application/json"
    },
})
else
    local gameId
	gameId = "8737602449"
	local servers = {}
	local req = httprequest({
		Url = "https://games.roblox.com/v1/games/" .. gameId .. "/servers/Public?sortOrder=Desc&limit=100"
	})
	local body = httpservice:JSONDecode(req.Body)
	if body and body.data then
		for i, v in next, body.data do
			if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.playing > 19 then
				table.insert(servers, 1, v.id)
			end
		end
	end
	if #servers > 0 then
		game:GetService("TeleportService"):TeleportToPlaceInstance(gameId, servers[math.random(1, #servers)], game:GetService("Players").LocalPlayer)
	end
	game:GetService("TeleportService").TeleportInitFailed:Connect(function()
		game:GetService("TeleportService"):TeleportToPlaceInstance(gameId, servers[math.random(1, #servers)], game:GetService("Players").LocalPlayer)
	end)
end
